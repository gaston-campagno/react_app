name: Deploy to EC2

on:
  workflow_run:
    workflows: 
      - "CI/Publish"    # Dependencia del workflow de Build
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check EC2 Status
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          echo "Instance ID: ${{ vars.EC2_INSTANCE_ID }}"
          INSTANCE_STATE=$(aws ec2 describe-instances --instance-ids ${{ vars.EC2_INSTANCE_ID }} --query 'Reservations[*].Instances[*].State.Name' --output text --debug)
          if [ "$INSTANCE_STATE" != "running" ]; then
            echo "EC2 instance is not running. Exiting..."
            exit 1
          fi

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into EC2 and Set Up Kubernetes Tools
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.EC2_INSTANCE_PUBLIC_IP }} << 'EOF'
      
          # Actualizar los paquetes y agregar la clave de firma de Google
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates curl
          sudo curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      
          # Agregar el repositorio de Kubernetes
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
      
          # Actualizar la lista de paquetes e instalar kubectl
          sudo apt-get update -y
          sudo apt-get install -y kubectl
      
          # Verificar la instalaciÃ³n de kubectl
          kubectl version --client
      
          EOF

      
      - name: SSH into EC2 and Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.EC2_INSTANCE_PUBLIC_IP }} << 'EOF'
          # Copiar el manifiesto de despliegue al servidor EC2
          echo "${{ secrets.DEPLOYMENT_MANIFEST }}" > /tmp/deployment.yaml
      
          # Aplicar el manifiesto en Kubernetes
          kubectl apply -f /tmp/deployment.yaml
      
          # Comprobar el estado del despliegue
          kubectl rollout status deployment/my-app-deployment
          EOF
